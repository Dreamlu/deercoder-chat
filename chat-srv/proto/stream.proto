syntax = "proto3";

package proto;

//option go_package = "deercoder-chat/user-srv";
//import "deercoder-chat/user-srv/proto/user.proto";

service Streamer {
    rpc Stream (stream Request) returns (stream Response) {
    }
    rpc ServerStream (Request) returns (stream Response) {
    }
}

message Request {
    Message message = 1;
}

message Response {
    Message message = 1;
}

// message model
message Message {

    string uuid = 1;
    string group_id = 2;
    int64 from_uid = 3;
    string headimg = 4;
    string name = 5;
    string content = 6;
    string content_type = 7;
    string create_time = 8;
}

// uids
message UidS {
    string uids = 1;
}

// true/false
message Boolean {
    bool bool = 1;
}

// message array
message ArrayMessage {
    repeated Message message = 1;
}

// group user
message GroupUser {
    int64 id = 1;
    string group_id = 2;
    int64 uid = 3;
}

// 用户搜索模型
// group user
message ChatUserSearch {
    int64 id = 1;
    string name = 2;
    int64 uid = 3;
}

// group response
message GUserResponse {
    repeated GroupUser GroupUser = 1;
}

// 好友列表[数组]
message UserList {
    repeated ChatUser userList = 1;
}

// 好友包列表用户[个人]
message ChatUser {
    int64 id = 1;
    string name = 2;
    string headimg = 3;
    string password = 4;
    string introduce = 5;
    string createtime = 6;
    string groupId = 7;
}

// rpc service
service ChatService {

    // 创建群聊/好友
    rpc DistributeGroup (UidS) returns (Response) {
    }

    // 拉取群聊所有消息
    rpc GetAllGroupMsg (Request) returns (ArrayMessage) {
    }

    // 拉取离线信息
    rpc GetGroupLastMsg (Request) returns (ArrayMessage) {
    }

    // 已读离线信息
    rpc ReadGroupLastMsg (Request) returns (Response) {
    }

    // 获取群聊用户列表
    rpc GetGroupUser (GroupUser) returns (GUserResponse) {
    }

    // 获取用户好友列表
    // 直接用user.User problem
    rpc GetUserList (ChatUser) returns (UserList) {
    }

    // 搜索获取获取群聊用户列表
    rpc GetUserSearchList (ChatUserSearch) returns (UserList) {
    }

    // 创建消息记录
    rpc CreateGroupMsg (Request) returns (Response) {
    }
}